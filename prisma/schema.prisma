// Schema for a fictional hotel
// This hotel tracks rooms, user reservations & reviews

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  identification String        @id @default(uuid())
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  email          String        @unique
  name           String
  reservations   Reservation[]
  reviews        Review[]
}

model Reservation {
  identification String   @id @default(uuid())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  userId         String?
  startDate      DateTime
  endDate        DateTime
  price          Int
  total          Int
  roomId         String?
  room           Room?    @relation(fields: [roomId], references: [identification])
  user           User?    @relation(fields: [userId], references: [identification])
}

model Room {
  identification     String        @id @default(uuid())
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
  totalOccupancy     Int           @default(5)
  totalBedrooms      Int           @default(5)
  totalBathrooms     Int           @default(5)
  summary            String?
  address            String
  isSmoking          Boolean       @default(false)
  hasTV              Boolean       @default(true)
  hasAirConditioning Boolean       @default(true)
  hasHeating         Boolean       @default(true)
  hasWIFI            Boolean       @default(true)
  price              Int
  media              Media[]
  reservations       Reservation[]
}

model Review {
  identification String   @id @default(uuid())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  rating         Int
  comment        String
  userId         String
  user           User     @relation(fields: [userId], references: [identification])
}

model Media {
  identification String   @id @default(uuid())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  roomId         String?
  fileName       String
  room           Room?    @relation(fields: [roomId], references: [identification])
}
